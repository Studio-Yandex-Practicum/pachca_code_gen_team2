import asyncio
import os

from dotenv import load_dotenv

from .bot import Bot
from .models.models_reqBod_putStatus import Putstatus
from .models.models_reqBod_createChat import Createchat
from .models.models_reqBod_createTask import Createtask
from .models.models_reqBod_postMessageReactions import Postmessagereactions
from .models.models_reqBod_editMessage import Editmessage
from .models.models_reqBod_postTagsToChats import Posttagstochats
from .models.models_reqBod_createMessage import Createmessage, Message
from .models.models_reqBod_postMembersToChats import Postmemberstochats

load_dotenv()

if __name__ == '__main__':

    print(id(Bot))
    print(Bot)
    pachca = Bot(token=f'Bearer {os.environ.get("TOKEN", "LOOKUP FAILED!")}')

    print(pachca.token)
    print(hasattr(pachca, 'get_common_methods'))

    message_test = Createmessage(message=Message(
        entity_type="discussion",
        entity_id=17579010,
        content="–í—á–µ—Ä–∞ –º—ã –ø—Ä–æ–¥–∞–ª–∏ 756 —Ñ—É—Ç–±–æ–ª–æ–∫ (—á—Ç–æ –Ω–∞ 10% –±–æ–ª—å—à–µ, —á–µ–º –≤ –ø—Ä–æ—à–ª–æ–µ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ)",
    ))
    #print(message_test.model_dump())
    async def run_pachca():
        print(await pachca.get_employee(id=515190))
        print(await pachca.get_employees())
        print(await pachca.get_chats(per=2))
        message = await pachca.create_message(data=message_test)
        print(message)
        print(await pachca.get_common_methods()) #–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—à–∏–±–∫—É, –Ω—É–∂–Ω–æ –ø—Ä–æ–ø–∏—Å–∞—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É –µ—Å–ª–∏ (parameters.query –∏ parameters.required)

        # # –°–æ–∑–¥–∞–Ω–∏–µ –±–µ—Å–µ–¥—ã.
        # created_chat = await pachca.create_chat(
        #     data=Createchat(
        #         chat={
        #             'name': '–¢–µ—Å—Ç–æ–≤–∞—è –±–µ—Å–µ–¥–∞ 31',
        #             'channel': False,
        #             'public': True
        #         }
        #     )
        # )
        # print('create_chat', created_chat, '\n','*'*60)

        # # –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –±–µ—Å–µ–¥ –¥–∞–Ω–Ω–æ–≥–æ —Ä–∞–±–æ—á–µ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞ (–†–ü —Ç–æ–∫–µ–Ω–∞)
        # all_chats = await pachca.get_chats()
        # print('get_chats', all_chats, '\n','*'*60)

        # # –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –±–µ—Å–µ–¥—ã –ø–æ id
        # chat = await pachca.get_chat(created_chat.data.id)
        # print('get_chat', chat, '\n','*'*60)

        # # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∫ –±–µ—Å–µ–¥–µ.
        # response_post_members = await pachca.post_members_to_chats(
        #     id=chat.data.id,
        #     data=Postmemberstochats(
        #         member_ids=[515190],
        #         silent=False
        #     )
        # )
        # print('post_members_to_chats', response_post_members, '\n','*'*60)

        # # –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –±–µ—Å–µ–¥–µ.
        # response_create_message = await pachca.create_message(
        #     data=Createmessage(
        #         message={
        #             'content': f'–ó–∞–ø–æ—â–µ–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –±–µ—Å–µ–¥—É {chat.data.id}',
        #             'entity_type': 'discussion',
        #             'entity_id': chat.data.id
        #         }
        #     )
        # )
        # print('create_message', response_create_message, '\n','*'*60)

        # # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–≥–æ–≤ —á–∞—Ç—É, –ø–æ–∫–∞ –Ω–µ–æ—Ç —Å–ø–æ—Å–æ–±–∞ —Å–æ–∑–¥–∞–≤–∞—Ç—å —Ç–µ–≥–∏.
        # # response = await pachca.post_tags_to_chats(
        # #     id=17519775,
        # #     data=Posttagstochats(
        # #         group_tag_ids=[1, 2, 3]
        # #     )
        # # )

        # # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ç–µ–≥–æ–≤
        # print(await pachca.get_tags())

        # # –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ —Å —Ç–µ–≥–æ–º —Å id.
        # # print(await pachca.get_tags_employees()

        # # –°–æ–∑–¥–∞–Ω–∏–µ —Ç—Ä–µ–¥–∞ –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é —Å id.
        # response_create_thread = await pachca.create_thread(
        #     id=response_create_message.data.id
        # )
        # print('create_thread', response_create_thread, '\n','*'*60)

        # # –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –≤ —Ç—Ä–µ–¥–µ –¥—Ä—É–≥–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        # response_create_message_in_thread = await pachca.create_message(
        #     data=Createmessage(
        #         message={
        #             'content': f'–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ç—Ä–µ–¥ {response_create_thread.data.id}',
        #             'entity_type': 'thread',
        #             'entity_id': response_create_thread.data.id
        #         }
        #     )
        # )
        # print('create_message_in_thread', response_create_message_in_thread, '\n','*'*60)

        # # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ç—Ä–µ–¥–∞ –∏–ª–∏ –±–µ—Å–µ–¥—ã —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
        # response_list_messages = await pachca.get_list_message(
        #     chat_id=response_create_thread.data.chat_id, per=10, page=1
        # )
        # print('get_list_message', response_list_messages, '\n','*'*60)

        # # –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ id
        # response_get_message = await pachca.get_message(
        #     id=response_create_message_in_thread.data.id
        # )
        # print('get_message', response_get_message, '\n','*'*60)

        # # –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ –µ–≥–æ id
        # response_edit_message = await pachca.edit_message(
        #     id=response_create_message_in_thread.data.id,
        #     data=Editmessage(message={
        #         'content': ('–†–ï–î–ê–ö–¢–ò–†–û–í–ê–ù–ò–ï –°–û–û–ë–©–ï–ù–ò–Ø '
        #                     f'{response_create_message_in_thread.data.id} '
        #                     '–ß–ï–†–ï–ó –ê–ü–ò –°–û–í–ï–†–®–ï–ù–û –£–°–ü–ï–®–ù–û')
        #     })
        # )
        # print('edit_message', response_edit_message, '\n','*'*60)

        # # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–∞–∫—Ü–∏–∏ –∫ —Å–æ–æ–±—â–µ–Ω–∏—é —Å id
        # response_add_reaction = await pachca.post_message_reactions(
        #     id=response_edit_message.data.id,
        #     data=Postmessagereactions(code='üëç')
        # )
        # response_add_reaction = await pachca.post_message_reactions(
        #     id=response_edit_message.data.id,
        #     data=Postmessagereactions(code='üò±')
        # )
        # print('post_message_reactions', response_add_reaction, '\n','*'*60)

        # # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö —Ä–µ–∞–∫—Ü–∏–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.
        # response_message_reactions = await pachca.get_message_reactions(
        #     id=response_edit_message.data.id,
        # )
        # print('get_message_reactions', response_message_reactions, '\n','*'*60)

        # # –£–¥–∞–µ–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Ä–µ–∞–∫—Ü–∏–∏ —É –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.
        # response_delete_reaction = await pachca.delete_message_reactions(
        #     id=response_edit_message.data.id,
        #     code='üò±'
        # )
        # print('delete_message_reactions', response_delete_reaction, '\n','*'*60)

        # # –°–æ–∑–¥–∞–Ω–∏–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
        # response_create_task = await pachca.create_task(
        #     data=Createtask(
        #         task={
        #             'kind': 'reminder',
        #             'content': '–¥–∞—Ç–∞ –≤ –ø—Ä–æ—à–ª–æ–º',
        #             'priority': 3,
        #             'due_at': '2025-12-24T18:00:29.000Z'
        #         }
        #     )
        # )
        # print('create_task', response_create_task, '\n','*'*60)

        # # –ú–µ—Ç–æ–¥ –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –ø–æ–∫–∏–Ω—É—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —á–∞—Ç (–±–µ—Å–µ–¥—É)
        # response = await pachca.leave_chat(
        #     id=created_chat.data.id
        # )
        # print(response)

        # –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ —Ä–∞–±–æ—á–µ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞.
        response_get_users = await pachca.get_employees()
        print('get_employees', response_get_users, '\n','*'*60)
        print(response_get_users.data[0].id)

        # –ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ —Ä–∞–±–æ—á–µ–≥–æ –ø—Ä–æ—Å—Ç–∞–Ω—Å—Ç–≤–∞.
        response_get_user = await pachca.get_employee(
            response_get_users.data[0].id
        )
        print('get_employee', response_get_user, '\n','*'*60)

        # –î–æ–±–∞–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å —Ç–µ–∫—É—â–µ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, –æ–±–ª–∞–¥–∞—Ç–µ–ª—é —Ç–æ–∫–µ–Ω–∞.
        response_put_status = await pachca.put_status(
            data=Putstatus(
                status={
                    'emoji': 'üò±',
                    'expires_at': '2025-12-24T17:47:25.000Z',
                    'title': '–°—Ç–∞—Ç—É—Å –∏–∑ –∫–ª–∏–µ–Ω—Ç–∞ –ê–ü–ò'
                }
            )
        )
        print('put_status', response_put_status, '\n','*'*60)

        # –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –æ–±–ª–∞–¥–∞—Ç–µ–ª—è —Ç–æ–∫–µ–Ω–∞.
        response_get_status = await pachca.get_status()
        print('get_status', response_get_status, '\n','*'*60)

        # –£–¥–∞–ª–∏—Ç—å —Å—Ç–∞—Ç—É—Å —Ç–µ–∫—É—â–µ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, –æ–±–ª–∞–¥–∞—Ç–µ–ª—é —Ç–æ–∫–µ–Ω–∞.
        response_del_status = await pachca.del_status()
        print('del_status', response_del_status, '\n','*'*60)


    asyncio.run(run_pachca())

    # print(type(pachca))
    # print(pachca.__class__)
    # print(pachca.__class__.__class__)
    # print(pachca.__class__.__class__.__class__)