openapi: 3.0.3
info:
  title: PachcaAPI - OpenAPI 3.0
  description: Документация к открытому API пачки
  version: 3.0.3
servers:
  - url: https://api.pachca.com/api/shared/v1

tags:
  - name: common methods
    description: Everything about common methods
  - name: employees
    description: Everything about employees
  - name: status
    description: Everything about
      status
  - name: tags
    description: Everything about
      tags
  - name: chats and channels
    description: Everything about
      chats and channels
  - name: talk and channel participants
    description: Everything about
      talk and channel participants
  - name: comments
    description: Everything about
      comments
  - name: messages
    description: Everything about
      messages
  - name: reactions to messages
    description: Everything about
      reactions to messages
  - name: reminders
    description: Everything about
      reminders

paths:
  /custom_properties:
    get:
      tags:
        - common methods
      summary: '43 / Список дополнительных полей'
      description: 'Информация будет добавлена позже.'
  /uploads:
    post:
      tags:
        - common methods
      summary: '44 / Получение подписи, ключа и других параметров'
      description: 'Информация будет добавлена позже.'
  /direct_url (полученный в ответе на запрос /uploads):
    post:
      tags:
        - common methods
      summary: '45 / Загрузка файла'
      description: 'Информация будет добавлена позже.'
  /users:
    get:
      tags:
        - employees
      summary: получение актуального списка всех сотрудников компании
      description: |
        Fetch a paginated list of employees with optional filtering by query.
      operationId: getEmployees
      parameters:
        - name: per
          in: query
          description: Количество возвращаемых сущностей за один запрос (по умолчанию 50, максимум
          required: false
          schema:
            type: integer
            default: 50
            maximum: 50
        - name: page
          in: query
          description: 	Страница выборки (по умолчанию 1)
          required: false
          schema:
            type: integer
            default: 1
        - name: query
          in: query
          description: |
            	Поисковая фраза для фильтрации результатов (поиск идет по полям first_name (имя), last_name (фамилия), email (электронная почта), phone_number (телефон) и nickname (никнейм))
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Успешный запрос
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Employee'
  /users/{id}:
    get:
      tags:
        - employees
      summary: получение информации о сотруднике
      description: |
        Метод для получения информации о сотруднике.
        Для получения сотрудника вам необходимо знать его id и указать его в URL запроса.
      operationId: getEmployee
      parameters:
        - name: id
          in: path
          description: Уникальный идентификатор сотрудкика
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Успешный запрос
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee'
        '404':
          description: Сотрудник не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
  /profile/status:
    get:
      tags:
        - status
      summary: получение информации о своем статусе
      description: |
        Параметры запроса отсутствуют
      operationId: getStatus
      responses:
        '200':
          description: Успешный запрос
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Status'
    put:
      tags:
        - status
      summary: новый статус
      description: |
        Создание нового статуса.
      operationId: putStatus
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryStatus'
      responses:
        '201':
          description: Объект создан
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Status'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              examples:
                BLANK:
                  summary: blank
                  description: Обязательное поле (не может быть пустым)
                  value:
                    detail: BLANK
                TOO_LONG:
                  summary: too_long
                  description: Слишком длинное значение (пояснения вы получите в поле message)
                  value:
                    detail: TOO_LONG
                INVALID:
                  summary: invalid
                  description: Поле не соответствует правилам (пояснения вы получите в поле message)
                  value:
                    detail: INVALID
                WRONG_EMOJI:
                  summary: wrong_emoji
                  description: Emoji статуса не может содержать значения отличные от Emoji символа
                  value:
                    detail: WRONG_EMOJI
    delete:
      tags:
        - status
      summary: удаление своего статуса
      description: |
        Параметры запроса отсутствуют
      operationId: delStatus
      responses:
        '204':
          description: Объект успешно удален, тело ответа отсутствует
          content: {}
  /group_tags/{id}:
    get:
      tags:
        - tags
      summary: '12 / Информация о теге'
      description: 'Информация будет добавлена позже.'
  /group_tags:
    get:
      tags:
        - tags
      summary: '13 / Список тегов сотрудников'
      description: 'Информация будет добавлена позже.'
  /group_tags/{id}/users:
    get:
      tags:
        - tags
      operationId: getTagsEmployees
      summary: получение актуального списка сотрудников тега
      description: |
        Метод для получения актуального списка сотрудников тега.
      parameters:
        - name: id
          in: path
          description: Уникальный идентификатор сотрудкика
          required: true
          schema:
            type: integer
        - name: per
          in: query
          description: Количество возвращаемых сущностей за один запрос (по умолчанию 50, максимум
          required: false
          schema:
            type: integer
            default: 25
            maximum: 50
        - name: page
          in: query
          description: 	Страница выборки (по умолчанию 1)
          required: false
          schema:
            type: integer
            default: 1
      responses:
        '200':
          description: Успешный запрос
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/BaseEmployee'
        '422':
          description: 	Поле имеет недопустимое значение
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exclusion'
  /chats:
    post:
      tags:
        - chats and channels
      summary: '17 / Новая беседа или канал'
      description: 'Информация будет добавлена позже.'
    get:
      tags:
        - chats and channels
      summary: '19 / Список бесед и каналов'
      description: 'Информация будет добавлена позже.'
  /chats/{id}:
    get:
      tags:
        - chats and channels
      summary: '18 / Информация о беседе или канале'
      description: 'Информация будет добавлена позже.'
  /chats/{id}/members:
    post:
      tags:
        - talk and channel participants
      summary: '23 / Добавление пользователей'
      description: 'Информация будет добавлена позже.'
  /chats/{id}/group_tags:
    post:
      tags:
        - talk and channel participants
      summary: '25 / Добавление тегов'
      description: 'Информация будет добавлена позже.'
  /chats/{id}/leave:
    delete:
      tags:
        - talk and channel participants
      summary: '27 / Выход из беседы или канала'
      description: 'Информация будет добавлена позже.'
  /messages/{id}/thread:
    delete:
      tags:
        - comments
      summary: '28 / Новый тред'
      description: 'Информация будет добавлена позже.'
  /messages:
    post:
      tags:
        - messages
      summary: создание нового сообщения
      description: |
        Метод для отправки сообщения в беседу или канал,
        личного сообщения пользователю или комментария в тред.

        При использовании entity_type: "discussion" (или просто без указания entity_type)
        допускается отправка любого chat_id в поле entity_id.
        То есть, сообщение можно отправить зная только идентификатор чата.
        При этом, вы имеете возможность отправить сообщение в тред по его идентификатору
        или личное сообщение по идентификатору пользователя.

        Для отправки личного сообщения пользователю создавать чат не требуется. 
        Достаточно указать entity_type: "user" и идентификатор пользователя. 
        Чат будет создан автоматически, если между вами ещё не было переписки.
        Между двумя пользователями может быть только один личный чат.
      operationId: createMessage
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  $ref: '#/components/schemas/CreateMessage'
      responses:
        '201':
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Message'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                detail: "Не удалось найти"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
              examples:
                REQUIRED FIELD BLANK:
                  summary: required fields blank
                  value:
                    detail: Поле не может быть пустым
                INVALID FIELD VALUE:
                  summary: invalid field value
                  value:
                    detail: Поле имеет недопустимое значение
    get:
      tags:
        - messages
      summary: '32 / Список сообщений чата'
      description: 'Информация будет добавлена позже.'
  /messages/{id}:
    get:
      tags:
        - messages
      summary: '31 / Информация о сообщении'
      description: 'Информация будет добавлена позже.'
    put:
      tags:
        - messages
      summary: '33 / Редактирование сообщения'
      description: 'Информация будет добавлена позже.'
  /messages/{id}/reactions:
    post:
      tags:
        - reactions to messages
      summary: '38 / Добавление реакции'
      description: 'Информация будет добавлена позже.'
    delete:
      tags:
        - reactions to messages
      summary: '39 / Удаление реакции'
      description: 'Информация будет добавлена позже.'
    get:
      tags:
        - reactions to messages
      summary: 'Получение актуального списка реакций.'
      description: |
        Этот метод позволяет получить список всех реакций, оставленных пользователями на указанное сообщение.
      operationId: getMessageReactions
      parameters:
        - name: id
          in: path
          required: true
          description: Уникальный идентификатор сообщения, список реакций на которое нужно получить.
          schema:
            type: integer
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per:
                  type: integer
                  description: Количество возвращаемых сущностей за один запрос (по умолчанию 50, максимум 50).
                  default: 50
                  maximum: 50
                page:
                  type: integer
                  description: Номер страницы выборки (по умолчанию 1).
                  default: 1
      responses:
        '200':
          description: Список реакций успешно получен.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Reaction'
        '404':
          description: Сообщение не найдено.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '400':
          description: Неверный запрос.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
  /tasks:
    post:
      tags:
        - reminders
      summary: '42 / Новое напоминание'
      description: 'Информация будет добавлена позже.'

components:
  schemas:
    BaseEmployee:
      type: object
      properties:
        id:
          type: integer
          example: 1
          description: Идентификатор пользователя
        first_name:
          type: string
          description: Имя
        last_name:
          type: string
          description: Фамилия
        nickname:
          type: string
          description: Имя пользователя
        email:
          type: string
          description: Электронная почта
        phone_number:
          type: string
          description: Телефон
        department:
          type: string
          description: Департамент
        role:
          type: string
          description: |
            Уровень доступа: admin (администратор), user (сотрудник), multi_guest (мульти-гость)
        suspended:
          type: boolean
          description: |
            Деактивация пользователя. При значении true пользователь является деактивированным.
        invite_status:
          type: string
          description: |
              Статус приглашения: confirmed (принято), sent (отправлено)
        list_tags:
          type: array
          items:
            type: string
          description: Массив тегов, привязанных к сотруднику
        custom_properties:
          type: array
          description: Дополнительные поля сотрудника
          items:
            type: object
            properties:
              id:
                type: integer
                description: Идентификатор поля
              name:
                type: string
                description: Название поля
              data_type:
                type: string
                description: Тип поля (string, number, date или link)
              value:
                type: string
                description: Значение
        bot:
          type: boolean
          description: |
            Тип: пользователь (false) или бот (true)
      description: Базовый класс сотрудника.
    Employee:
      allOf:
        - $ref: '#/components/schemas/BaseEmployee'
        - type: object
          properties:
            user_status:
              $ref: '#/components/schemas/Status'
            title:
              type: string
              description: Должность
            created_at:
              type: string
              format: date-time
              description: |
                Дата создания (ISO-8601, UTC+0) в формате YYYY-MM-DDThh:mm:ss.sssZ
            time_zone:
              type: string
              description: Часовой пояс пользователя
            image_url:
              type: string
              nullable: true
              description: Ссылка на скачивание аватарки
          description: Расширенный класс сотрудника.
    Status:
      type: object
      nullable: true
      description: 	Статус. Возвращается как null, если статус не установлен.
      properties:
        emoji:
          type: string
          description: 	Emoji символ статуса
        title:
          type: string
          description: Текст статуса
        expires_at:
            type: string
            format: date-time
            nullable: true
            description: |
              Срок жизни статуса (ISO-8601, UTC+0) в формате YYYY-MM-DDThh:mm:ss.sssZ. Возвращается как null, если срок не установлен.
    QueryStatus:
      type: object
      properties:
        status:
          type: object
          description: Собранный объект параметров нового статуса
          required:
            - emoji
            - title
          properties:
            emoji:
              type: string
              description: Emoji символ статуса
            title:
              type: string
              description: Текст статуса
            expires_at:
              type: string
              format: date-time
              description: Срок действия статуса (ISO-8601, UTC+0) в формате YYYY-MM-DDThh:mm:ss.sssZ
              nullable: true
    NotFound:
      description: Объект не найден
      type: object
      properties:
        detail:
          description: 'Описание ошибки'
          example: "Страница не найдена."
          type: string
    ErrorModel:
      title: ErrorModel
      required:
        - detail
      type: object
      properties:
        detail:
          title: Detail
          anyOf:
            - type: string
            - type: object
              additionalProperties:
                type: string
    CreateMessage:
      type: object
      required:
        - entity_id
        - content
      properties:
        entity_type:
          title: Entity Type
          type: string
          enum:
            - 'discussion'
            - 'user'
            - 'thread'
          default: 'discussion'
        entity_id:
          title: Entity Id
          type: integer
        content:
          title: Content
          type: string
        files:
          title: Files
          type: array
          items:
            type: object
            required:
              - key
              - name
              - file_type
              - size
            properties:
              key:
                title: Key
                type: string
              name:
                title: Name
                type: string
              file_type:
                title: File Type
                type: string
                enum:
                  - 'file'
                  - 'image'
              size:
                title: Size
                type: integer
        parent_message_id:
          title: Parent Massage Id
          type: integer
          nullable: true
          default: null
        skip_invite_mentions:
          title: Skip Invite Mentions
          type: boolean
          default: false
        link_preview:
          title: Link Preview
          type: boolean
          default: false
      example:
        entity_type: discussion
        entity_id: 198
        content: Вчера мы продали 756 футболок (что на 10% больше, чем в прошлое воскресенье)
    Message:
      type: object
      properties:
        entity_type:
          title: Entity Type
          type: string
          enum:
            - 'discussion'
            - 'user'
            - 'thread'
          default: 'discussion'
        entity_id:
          title: Entity Id
          type: integer
        content:
          title: Content
          type: string
        id:
          title: Id
          type: integer
        chat_id:
          title: Chat Id
          type: integer
        user_id:
          title: User Id
          type: integer
        created_at:
          title: Created At
          type: string
          format: date-time
        files:
          title: Files
          type: array
          items:
            type: object
            properties:
              id:
                title: Id
                type: integer
              key:
                title: Key
                type: string
              name:
                title: Name
                type: string
              file_type:
                title: File Type
                type: string
                enum:
                  - 'file'
                  - 'image'
              url:
                title: Url
                type: string
        thread:
          title: Thread
          type: object
          nullable: true
          default: null
          properties:
            id:
              title: Id
              type: integer
            chat_id:
              title: Chat Id
              type: integer
        forwarding:
          title: Forwarding
          type: object
          nullable: true
          default: null
          properties:
            original_message_id:
              title: Origin Message Id
              type: integer
            original_chat_id:
              title: Original Chat Id
              type: integer
            author_id:
              title: Author Id
              type: integer
            original_created_at:
              title: Original Created At
              type: integer
            original_thread_id:
              title: Original Thread Id
              type: integer
              nullable: true
            original_thread_message_id:
              title: Original Thread Message Id
              type: integer
              nullable: true
            original_thread_parent_chat_id:
              title: Original Thread Parent Chat Id
              type: integer
              nullable: true
        parent_message_id:
          title: Parent Massage Id
          type: integer
          nullable: true
          default: null
      example:
        id: 194275,
        entity_type: discussion
        entity_id: 198
        chat_id: 198
        content: Вчера мы продали 756 футболок (что на 10% больше, чем в прошлое воскресенье)
        user_id: 12
        created_at: 2020-06-08T09:32:57.000Z
        files: []
        buttons: []
        thread: null
        forwarding: null
        parent_message_id: null
    Reaction:
      type: object
      properties:
        user_id:
          type: integer
          description: |
            Идентификатор пользователя, оставившего реакцию.
        created_at:
          type: string
          format: date-time
          description: |
            Дата и время добавления реакции (ISO-8601, UTC+0) в формате YYYY-MM-DDThh:mm:ss.sssZ.
        code:
          type: string
          description: |
            Emoji символ реакции.
    BadRequest:
      type: object
      properties:
        error:
          type: string
        message:
          type: string