openapi: 3.0.3
info:
  title: PachcaAPI - OpenAPI 3.0
  description: Документация к открытому API пачки
  version: 3.0.3
servers:
  - url: https://api.pachca.com/api/shared/v1

tags:
  - name: common methods
    description: Everything about common methods
  - name: employees
    description: Everything about employees
  - name: status
    description: Everything about
      status
  - name: tags
    description: Everything about
      tags
  - name: chats and channels
    description: Everything about
      chats and channels
  - name: talk and channel participants
    description: Everything about
      talk and channel participants
  - name: comments
    description: Everything about
      comments
  - name: messages
    description: Everything about
      messages
  - name: reactions to messages
    description: Everything about
      reactions to messages
  - name: reminders
    description: Everything about
      reminders

paths:
  /custom_properties:
    get:
      tags:
        - common methods
      summary: Список дополнительных полей
      description: |
        Метод для получения актуального списка дополнительных полей участников и напоминаний в вашей компании.
      operationId: getCommonMethods
      parameters:
        - name: entity_type
          in: query
          description: Тип сущности - участник (User) или напоминание (Task).
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Успешный запрос
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/QueryCommonMethods'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              examples:
                BLANK:
                  summary: blank
                  description: Поле не может быть пустым
                  value:
                    detail: BLANK
                INCLUSION:
                  summary: inclusion
                  description: Поле имеет непредусмотренное значение
                  value:
                    detail: INCLUSION
  /uploads:
    post:
      tags:
        - common methods
      summary: '44 / Получение подписи, ключа и других параметров'
      description: 'Информация будет добавлена позже.'
  /direct_url (полученный в ответе на запрос /uploads):
    post:
      tags:
        - common methods
      summary: '45 / Загрузка файла'
      description: 'Информация будет добавлена позже.'
  /users:
    get:
      tags:
        - employees
      summary: получение актуального списка всех сотрудников компании
      description: |
        Fetch a paginated list of employees with optional filtering by query.
      operationId: getEmployees
      parameters:
        - name: per
          in: query
          description: Количество возвращаемых сущностей за один запрос (по умолчанию 50, максимум
          required: false
          schema:
            type: integer
            default: 50
            maximum: 50
        - name: page
          in: query
          description: 	Страница выборки (по умолчанию 1)
          required: false
          schema:
            type: integer
            default: 1
        - name: query
          in: query
          description: |
            	Поисковая фраза для фильтрации результатов (поиск идет по полям first_name (имя), last_name (фамилия), email (электронная почта), phone_number (телефон) и nickname (никнейм))
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Успешный запрос
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Employee'
  /users/{id}:
    get:
      tags:
        - employees
      summary: получение информации о сотруднике
      description: |
        Метод для получения информации о сотруднике.
        Для получения сотрудника вам необходимо знать его id и указать его в URL запроса.
      operationId: getEmployee
      parameters:
        - name: id
          in: path
          description: Уникальный идентификатор сотрудкика
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Успешный запрос
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Employee'
        '404':
          description: Сотрудник не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
  /profile/status:
    get:
      tags:
        - status
      summary: получение информации о своем статусе
      description: |
        Параметры запроса отсутствуют
      operationId: getStatus
      responses:
        '200':
          description: Успешный запрос
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Status'
    put:
      tags:
        - status
      summary: новый статус
      description: |
        Создание нового статуса.
      operationId: putStatus
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryStatus'
      responses:
        '201':
          description: Объект создан
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Status'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              examples:
                BLANK:
                  summary: blank
                  description: Обязательное поле (не может быть пустым)
                  value:
                    detail: BLANK
                TOO_LONG:
                  summary: too_long
                  description: Слишком длинное значение (пояснения вы получите в поле message)
                  value:
                    detail: TOO_LONG
                INVALID:
                  summary: invalid
                  description: Поле не соответствует правилам (пояснения вы получите в поле message)
                  value:
                    detail: INVALID
                WRONG_EMOJI:
                  summary: wrong_emoji
                  description: Emoji статуса не может содержать значения отличные от Emoji символа
                  value:
                    detail: WRONG_EMOJI
    delete:
      tags:
        - status
      summary: удаление своего статуса
      description: |
        Параметры запроса отсутствуют
      operationId: delStatus
      responses:
        '204':
          description: Объект успешно удален, тело ответа отсутствует
          content: {}
  /group_tags/{id}:
    get:
      tags:
        - tags
      summary: Информация о теге
      description: |
        Параметры запроса отсутствуют
      operationId: getTag
      parameters:
          - name: id
            in: path
            description: Уникальный идентификатор тега
            required: true
            schema:
              type: integer
      responses:
        '200':
          description: Успешный запрос
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Tag'
        '404':
          description: Тег не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
  /group_tags:
    get:
      tags:
        - tags
      summary: '13 / Список тегов сотрудников'
      description: 'Информация будет добавлена позже.'
  /group_tags/{id}/users:
    get:
      tags:
        - tags
      operationId: getTagsEmployees
      summary: получение актуального списка сотрудников тега
      description: |
        Метод для получения актуального списка сотрудников тега.
      parameters:
        - name: id
          in: path
          description: Уникальный идентификатор сотрудкика
          required: true
          schema:
            type: integer
        - name: per
          in: query
          description: Количество возвращаемых сущностей за один запрос (по умолчанию 50, максимум
          required: false
          schema:
            type: integer
            default: 25
            maximum: 50
        - name: page
          in: query
          description: 	Страница выборки (по умолчанию 1)
          required: false
          schema:
            type: integer
            default: 1
      responses:
        '200':
          description: Успешный запрос
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/BaseEmployee'
        '422':
          description: 	Поле имеет недопустимое значение
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exclusion'
  /chats:
    post:
      tags:
        - chats and channels
      summary: '17 / Новая беседа или канал'
      description: 'Информация будет добавлена позже.'
    get:
      tags:
        - chats and channels
      summary: '19 / Список бесед и каналов'
      description: 'Информация будет добавлена позже.'
  /chats/{id}:
    get:
      tags:
        - chats and channels
      summary: '18 / Информация о беседе или канале'
      description: 'Информация будет добавлена позже.'
  /chats/{id}/members:
    post:
      tags:
        - talk and channel participants
      summary: '23 / Добавление пользователей'
      description: 'Информация будет добавлена позже.'
  /chats/{id}/group_tags:
    post:
      tags:
         - talk and channel participants
      summary: добавление тегов в состав участников беседы или канала
      description: |
        Метод для добавления тегов в состав участников беседы или канала.
      operationId: postTagsToChats
      parameters:
        - name: id
          in: path
          description: Идентификатор беседы/канала
          required: true
          schema:
            type: integer
            format: int64
            example: 533
      requestBody:
        description: Массив идентификаторов тегов, которые станут участниками
        content:
          application/json:
            schema:
              required:
                - group_tag_ids
              type: object
              properties:
                group_tag_ids:
                  type: array
                  minItems: 1
                  items:
                    type: integer
                    format: int64
                  example: [86, 18]
      responses:
        '201':
          description: Тег(и) добавлен(ы)
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorsCode'
  /chats/{id}/leave:
    delete:
      tags:
        - talk and channel participants
      summary: '27 / Выход из беседы или канала'
      description: 'Информация будет добавлена позже.'
  /messages/{id}/thread:
    post:
      tags:
        - comments
      summary: Создание нового треда
      description: |
        Этот метод позволяет создать новый тред к сообщению. Если у сообщения уже был создан тред, то в ответе вернётся информация об уже созданном ранее треде.
      operationId: createThread
      parameters:
        - name: id
          in: path
          required: true
          description: Уникальный идентификатор сообщения, к которому создается тред.
          schema:
            type: integer
      responses:
        '200':
          description: Тред успешно создан или возвращены данные существующего треда.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: Идентификатор созданного треда.
                      chat_id:
                        type: integer
                        description: Идентификатор чата треда.
                      message_id:
                        type: integer
                        description: Идентификатор сообщения, к которому был создан тред.
                      message_chat_id:
                        type: integer
                        description: Идентификатор чата сообщения.
                      updated_at:
                        type: string
                        format: date-time
                        description: |
                          Дата и время обновления треда (ISO-8601, UTC+0) в формате YYYY-MM-DDThh:mm:ss.sssZ.
        '404':
          description: Сообщение не найдено.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '400':
          description: Неверный запрос.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
  /messages:
    post:
      tags:
        - messages
      summary: '30 / Новое сообщение'
      description: 'Информация будет добавлена позже.'
    get:
      tags:
        - messages
      summary: '32 / Список сообщений чата'
      description: 'Информация будет добавлена позже.'
  /messages/{id}:
    get:
      tags:
        - messages
      summary: '31 / Информация о сообщении'
      description: 'Информация будет добавлена позже.'
    put:
      tags:
        - messages
      summary: '33 / Редактирование сообщения'
      description: 'Информация будет добавлена позже.'
  /messages/{id}/reactions:
    post:
      tags:
        - reactions to messages
      operationId: postMessageReactions
      summary: Добавление реакции
      description: >
        Метод для добавления реакции на сообщение.
        **Лимиты реакций:**
        - Каждый пользователь может установить не более 20 уникальных реакций на сообщение.
        - Сообщение может иметь не более 30 уникальных реакций.
        - Сообщение может иметь не более 1000 реакций.
      parameters:
        - name: id
          in: path
          required: true
          description: Уникальный идентификатор сообщения.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  description: Emoji в строковом формате для добавления реакции.
              required:
                - code
      responses:
        "204":
          description: Успешное выполнение запроса, тело ответа отсутствует.

        "400":
          description: Ошибка валидации запроса.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Описание ошибки.
              examples:
                blank_field:
                  summary: Поле code пустое
                  value:
                    error: blank
                exclusion:
                  summary: Недопустимое значение эмодзи
                  value:
                    error: exclusion

        "403":
          description: Превышение лимитов по реакциям.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Описание ошибки.
              examples:
                user_limit:
                  summary: Превышен лимит уникальных реакций пользователя
                  value:
                    error: user_limit
                    message: "Вы можете добавить не более 20 уникальных реакций."
                unique_limit:
                  summary: Превышен лимит уникальных реакций на сообщение
                  value:
                    error: unique_limit
                    message: "Сообщение может содержать не более 30 уникальных реакций."
                general_limit:
                  summary: Превышен общий лимит реакций на сообщение
                  value:
                    error: general_limit
                    message: "Сообщение может содержать не более 1000 реакций."

        "404":
          description: Сообщение не найдено.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Сообщение не найдено.
              examples:
                not_found:
                  summary: Сообщение не существует
                  value:
                    error: not_found
    delete:
      tags:
        - reactions to messages
      summary: '39 / Удаление реакции'
      description: 'Информация будет добавлена позже.'
    get:
      tags:
        - reactions to messages
      summary: 'Получение актуального списка реакций.'
      description: |
        Этот метод позволяет получить список всех реакций, оставленных пользователями на указанное сообщение.
      operationId: getMessageReactions
      parameters:
        - name: id
          in: path
          required: true
          description: Уникальный идентификатор сообщения, список реакций на которое нужно получить.
          schema:
            type: integer
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per:
                  type: integer
                  description: Количество возвращаемых сущностей за один запрос (по умолчанию 50, максимум 50).
                  default: 50
                  maximum: 50
                page:
                  type: integer
                  description: Номер страницы выборки (по умолчанию 1).
                  default: 1
      responses:
        '200':
          description: Список реакций успешно получен.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Reaction'
        '404':
          description: Сообщение не найдено.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '400':
          description: Неверный запрос.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
  /tasks:
    post:
      tags:
        - reminders
      summary: 'Метод для создания нового напоминания.'
      description: |
        При создании напоминания обязательным условием является указания типа напоминания: звонок, встреча, простое напоминание, событие или письмо. 
        При этом не требуется дополнительное описание - вы просто создадите напоминание с соответствующим текстом.
        Если вы укажите описание напоминания - то именно оно и станет текстом напоминания.
        У напоминания должны быть ответственные, если их не указывать - ответственным назначаетесь вы.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                task:
                  type: object
                  required:
                    - kind
                    - content
                    - due_at
                  properties:
                    kind:
                      type: string
                      description: Тип напоминания (call, meeting, reminder, event, email)
                    content:
                      type: string
                      description: Описание напоминания
                    due_at:
                      type: string
                      format: date-time
                      description: Срок выполнения напоминания (ISO-8601)
                    priority:
                      type: integer
                      description: Приоритет (1 - по умолчанию, 2 - важно, 3 - очень важно)
                    performer_ids:
                      type: array
                      items:
                        type: integer
                      description: Массив идентификаторов пользователей
                    custom_properties:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                            description: Идентификатор поля
                          value:
                            type: string
                            description: Значение поля
      responses:
        '201':
          description: Напоминание успешно создано
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: Идентификатор созданного напоминания
                      kind:
                        type: string
                        description: Тип
                      content:
                        type: string
                        description: Описание
                      due_at:
                        type: string
                        format: date-time
                        description: Срок выполнения (ISO-8601)
                      priority:
                        type: integer
                        description: Приоритет
                      user_id:
                        type: integer
                        description: Идентификатор пользователя-создателя
                      status:
                        type: string
                        description: Статус напоминания
                      created_at:
                        type: string
                        format: date-time
                        description: Дата и время создания
                      performer_ids:
                        type: array
                        items:
                          type: integer
                      custom_properties:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              description: Идентификатор поля
                            name:
                              type: string
                              description: Название поля
                            data_type:
                              type: string
                              description: Тип поля (string, number, date или link)
                            value:
                              type: string
                              description: Значение

        '400':
          description: Ошибка запроса
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Описание ошибки

components:
  schemas:
    BaseEmployee:
      type: object
      properties:
        id:
          type: integer
          example: 1
          description: Идентификатор пользователя
        first_name:
          type: string
          description: Имя
        last_name:
          type: string
          description: Фамилия
        nickname:
          type: string
          description: Имя пользователя
        email:
          type: string
          description: Электронная почта
        phone_number:
          type: string
          description: Телефон
        department:
          type: string
          description: Департамент
        role:
          type: string
          description: |
            Уровень доступа: admin (администратор), user (сотрудник), multi_guest (мульти-гость)
        suspended:
          type: boolean
          description: |
            Деактивация пользователя. При значении true пользователь является деактивированным.
        invite_status:
          type: string
          description: |
              Статус приглашения: confirmed (принято), sent (отправлено)
        list_tags:
          type: array
          items:
            type: string
          description: Массив тегов, привязанных к сотруднику
        custom_properties:
          type: array
          description: Дополнительные поля сотрудника
          items:
            type: object
            properties:
              id:
                type: integer
                description: Идентификатор поля
              name:
                type: string
                description: Название поля
              data_type:
                type: string
                description: Тип поля (string, number, date или link)
              value:
                type: string
                description: Значение
        bot:
          type: boolean
          description: |
            Тип: пользователь (false) или бот (true)
      description: Базовый класс сотрудника.
    Employee:
      allOf:
        - $ref: '#/components/schemas/BaseEmployee'
        - type: object
          properties:
            user_status:
              $ref: '#/components/schemas/Status'
            title:
              type: string
              description: Должность
            created_at:
              type: string
              format: date-time
              description: |
                Дата создания (ISO-8601, UTC+0) в формате YYYY-MM-DDThh:mm:ss.sssZ
            time_zone:
              type: string
              description: Часовой пояс пользователя
            image_url:
              type: string
              nullable: true
              description: Ссылка на скачивание аватарки
          description: Расширенный класс сотрудника.
    Status:
      type: object
      nullable: true
      description: 	Статус. Возвращается как null, если статус не установлен.
      properties:
        emoji:
          type: string
          description: 	Emoji символ статуса
        title:
          type: string
          description: Текст статуса
        expires_at:
            type: string
            format: date-time
            nullable: true
            description: |
              Срок жизни статуса (ISO-8601, UTC+0) в формате YYYY-MM-DDThh:mm:ss.sssZ. Возвращается как null, если срок не установлен.
    QueryStatus:
      type: object
      properties:
        status:
          type: object
          description: Собранный объект параметров нового статуса
          required:
            - emoji
            - title
          properties:
            emoji:
              type: string
              description: Emoji символ статуса
            title:
              type: string
              description: Текст статуса
            expires_at:
              type: string
              format: date-time
              description: Срок действия статуса (ISO-8601, UTC+0) в формате YYYY-MM-DDThh:mm:ss.sssZ
              nullable: true
    QueryCommonMethods:
      type: object
      description: 	получение списка актульных полей сущности.
      properties:
        id:
          type: integer
          example: 1
          description: Название поля
        name:
          type: string
          example: Дата рождения
          description: Идентификатор поля
        data_type:
          type: string
          example: number
          description: тип поля (string, number, date или link)
    NotFound:
      description: Объект не найден
      type: object
      properties:
        detail:
          description: 'Описание ошибки'
          example: "Страница не найдена."
          type: string
    Reaction:
      type: object
      properties:
        user_id:
          type: integer
          description: |
            Идентификатор пользователя, оставившего реакцию.
        created_at:
          type: string
          format: date-time
          description: |
            Дата и время добавления реакции (ISO-8601, UTC+0) в формате YYYY-MM-DDThh:mm:ss.sssZ.
        code:
          type: string
          description: |
            Emoji символ реакции.
    BadRequest:
      type: object
      properties:
        error:
          type: string
        message:
          type: string
    ErrorsCode:
      description: Bad Request
      type: object
      properties:
        key:
          type: string
        value:
          type: string
        message:
          type: string
        code:
          type: string
        payload:
          type: object
    Tag:
      type: object
      description: Для получения тега вам необходимо знать его id и указать его в URL запроса.
      properties:
        id:
          type: integer
          description: Идентификатор тега
        name:
          type: string
          description:   Название тега
        users_count:
          description: Количество сотрудников, которые имеют этот тег
          type: integer